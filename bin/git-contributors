#!/usr/bin/env ruby
require 'zlog'
require 'git-issues'
Zlog.init_stdout loglevel: :debug
Log = Logging.logger[self]

gi = GitIssues.new
prov = gi.gitReposFor('.')
Log.abort "no github repo here?" if prov.empty?

user = prov[0].repo['user']
repo = prov[0].repo['repo'].sub(/\.git/,'')

require 'rest-client'
require 'json'
require 'diffy'
require 'inquirer'
url = "https://api.github.com/repos/#{user}/#{repo}/contributors"
p "get #{url}"
res = RestClient.get url
users = JSON.load(res)

class Readme
  IGNORE = ['lollyrocker']
  REPLACE = {
    "Bernhard Weisshuhn (a.k.a. bernhorst)" => "Bernhard K. Weisshuhn"
  }

  def initialize path = 'README.md'
    @path = path
    @old = File::read path
    @replacer = contrib_string
    @users = {}
  end

  def ensure_user user, stats
    login = user['login']
    if @users.key? login
      puts "ww user already defined: #{login}"
    end

    if IGNORE.include? login
      puts ".. ignoring #{login}"
    else
      puts "++ #{login}"
      user['stats'] = stats
      @users[login] = user
    end
  end
 
  def save
    nu_contribs = @users.values.
      sort_by{|x| -x['stats']['contributions']}.
      map do |x|
        (x['name'] || '') + " ["+x['login']+"]("+x['html_url']+")"
      end.join("\n* ")
    
    nu = @old.sub(@replacer, "\n* " + nu_contribs)
    
    puts Diffy::Diff.new( @old, nu, context: 2 ).to_s
    if Ask.confirm "Save this?", default: false
      File::write @path, nu
    end
  end

  private

  def contrib_string
    m = @old.match /(?:\n## Contributors[^\n]*\n)(?<names>(\n\* [^\n]+)+)/
    m['names']
  end

end

if File::file? 'README.md'
  readme = Readme.new
  users.map do |x|
    user = JSON.load( RestClient.get x['url'] )
    readme.ensure_user user, x
  end
  readme.save
end
